@inherits LayoutComponentBase

@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using PhishyBank.Models
@using System.Text.Json
@using System.IdentityModel.Tokens.Jwt
@using System.Globalization
@using PhishyBank.Data
@using PhishyBank.Server.Controllers
@using PhishyBank.Server.State

@inject StateHelper StateHelper

<PageTitle>@PhishyLayoutComponentBase.getPageTitle("Home")</PageTitle>

<div class="container-phishybank">
    <!-- BEGIN Modal -->
    <div class="modal fade" id="aboutModal" data-backdrop="static" data-keyboard="false" tabindex="-1" role="dialog"
        aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="staticBackdropLabel">About Phishy Bank</h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <h5>Created by</h5>
                    <p class="text-monospace">
                        10200376B Seah Shih Wei Gerome
                        <br />
                        S01623826 Soh Thiam Hing
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    <!-- END Modal -->
    <CascadingValue Value="this">
        <div class="body-main">
            <div class="container-navmenu">
                <NavMenu />
            </div>
            <main>
                @Body
            </main>
        </div>
    </CascadingValue>
    <Footer />
</div>

@code {
    public User PhishyUser { get; private set; } = new User
    {
        Id = -1,
        Email = "",
        Password = "",
        Name = ""
    };

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // NOTE firstRender is true on page first load or refresh
        if (firstRender)
        {
            var user = await StateHelper.GetUser();
            if (user != null) {
                PhishyUser = user;
                this.StateHasChanged();
            }
        }
    }
}