@using PhishyBank.Server.State
@using PhishyBank.Models
@using System.Diagnostics
@inject StateHelper StateHelper

<div class="navmenu">
    <nav class="navbar fixed-top navbar-expand-lg navbar-dark" style="background-color: #E95420;">
        <a class="navbar-brand" href="#">
            <div class="row mx-auto">
                <img src="assets/brand.svg" width="64" height="64" alt="" loading="lazy">
                <div class="brand my-auto">Phishy Bank</div>
            </div>
        </a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarNavDropdown"
                aria-controls="navbarNavDropdown" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavDropdown">
            <div class="mr-auto">
            </div>
            @if (@_Parent.PhishyUser.Id == -1)
            {
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="btn btn-success" href="./login">
                            <i class="fas fa-sign-in-alt"></i>&nbsp;Login
                        </a>
                    </li>
                </ul>
            }
            else
            {
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item active">
                        <a class="nav-link" href="./account/"><b>Home</b></a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="fund_transfer.aspx">Transfer</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" data-toggle="modal" data-target="#aboutModal" href="">About</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    <li class="nav-link active my-auto mx-2">
                        <i class="fas fa-user-circle"></i>&nbsp;
                        @_Parent.PhishyUser.Name
                    </li>
                    <li class="nav-item">
                        <a class="btn btn-secondary" href="/logout.ashx">
                            <i class="fas fa-sign-out-alt"></i>&nbsp;Logout
                        </a>
                    </li>
                </ul>
            }
        </div>
    </nav>
</div>

@code {
    private User? currentUser;
    
    [CascadingParameter]
    private PhishyBankStateContainer _Parent { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        // NOTE firstRender is true on page first load or refresh
        if (firstRender)
        {
            var user = await StateHelper.GetUser();
            if (user != null)
            {
                currentUser = user;
                Console.WriteLine("currentUser is " + currentUser.ToString());
                this.StateHasChanged();
            } else {
                Console.WriteLine("User does not exist");
            }
        }
    }
}